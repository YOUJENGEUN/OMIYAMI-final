<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MypageMapper">

	<!-- 마이페이지 메인 -->
	<!-- 주문 개수 조회 -->
    <select id="getUserOrderCount" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM `ORDER` 
        WHERE user_id = #{userId} AND status IN ('결제예정', '결제완료', '상품준비중', '배송중', '배송완료')
    </select>

    <!-- 취소 개수 조회 -->
    <select id="getUserCancelCount" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM `ORDER` 
        WHERE user_id = #{userId} AND status IN ('취소', '환불완료')
    </select>
    
	<!-- 쿠폰 개수 조회 -->
	<select id="getUserCouponCount" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM user_coupon 
        WHERE user_id = #{userId} AND status = 1
    </select>
    
	<!-- 가장 최근 주문 상태 조회 -->
    <select id="getLatestOrderStatus" parameterType="int" resultType="string">
        SELECT status 
        FROM `ORDER` 
        WHERE user_id = #{userId} 
        ORDER BY date DESC 
        LIMIT 1;
    </select>

	<!-- 최근 주문 5개 조회 -->
	<select id="getRecentOrders" parameterType="int" resultType="orderdetail">
		SELECT 
        o.order_id AS orderId,               <!-- 주문 ID -->
        o.order_num AS orderNum,             <!-- 주문 번호 -->
        o.date AS orderDate,                 <!-- 주문 날짜 -->
        o.status AS orderStatus,             <!-- 주문 상태 -->
        op.product_id AS productId,          <!-- 상품 ID -->
        op.quantity AS productOrderQuantity, <!-- 상품 주문 수량 -->
        p.brand_name AS brandName,           <!-- 상품 브랜드 이름 -->
        p.product_name AS productName,       <!-- 상품 이름 -->
        p.option AS productOption,           <!-- 상품 옵션 -->
        (op.quantity * p.price) AS productOrderPrice, <!-- 상품별 주문 총 가격 -->
        (SELECT MIN(i.img_url)               <!-- 해당 상품의 이미지 URL 하나 선택 -->
         FROM PRODUCT_IMG i 
         WHERE i.product_id = op.product_id
         LIMIT 1) AS imgUrl                  <!-- 하나의 img_url만 가져옴 -->
    FROM 
        `ORDER` o
    INNER JOIN 
        `ORDER_PRODUCT` op ON o.order_id = op.order_id  <!-- 주문과 주문 상품 조인 -->
    INNER JOIN 
        `PRODUCT` p ON op.product_id = p.product_id      <!-- 주문 상품과 제품 조인 -->
    WHERE 
        o.user_id = #{userId}                            <!-- 특정 사용자 ID로 필터링 -->
    ORDER BY 
        o.order_id DESC                                  <!-- 주문 번호 기준으로 정렬 -->
    LIMIT 5;                                             <!-- 최근 주문 중 5개만 출력 -->
	</select>


	<!-- 쇼핑정보 -->
	<!-- 모든 주문 개수 조회 -->
	<select id="getAllOrdersCount" parameterType="int" resultType="int">
		SELECT COUNT(*) 
		FROM `ORDER` o
		INNER JOIN `ORDER_PRODUCT` op ON o.order_id = op.order_id
		WHERE o.user_id = #{userId};
	</select>

	<!-- 모든 주문 정보 조회 -->
	<select id="getAllOrders" parameterType="int" resultType="orderdetail">
	    SELECT 
	        o.order_id AS orderId,              <!-- 주문 ID -->
	        o.order_num AS orderNum,            <!-- 주문 번호 -->
	        o.date AS orderDate,                <!-- 주문 날짜 -->
	        o.status AS orderStatus,            <!-- 주문 상태 -->
	        op.product_id AS productId,         <!-- 상품 ID -->
	        op.quantity AS productOrderQuantity,<!-- 상품 주문 수량 -->
	        p.brand_name AS brandName,          <!-- 상품 브랜드 이름 -->
	        p.product_name AS productName,      <!-- 상품 이름 -->
	        p.option AS productOption,          <!-- 상품 옵션 -->
	        (op.quantity * p.price) AS productOrderPrice,  <!-- 상품별 주문 총 가격 -->
	        (SELECT i.img_url FROM PRODUCT_IMG i WHERE i.product_id = op.product_id LIMIT 1) AS imgUrl
	    FROM 
	        `ORDER` o
	    INNER JOIN 
	        `ORDER_PRODUCT` op ON o.order_id = op.order_id 
	    INNER JOIN 
	        `PRODUCT` p ON op.product_id = p.product_id 
	    WHERE 
	        o.user_id = #{userId} 
	    ORDER BY 
	        o.order_id DESC
	    LIMIT #{pageSize} OFFSET #{offset};
	</select>

	<!-- 취소 주문 개수 조회 -->
	<select id="getCanceledOrdersCount" parameterType="int" resultType="int">
		SELECT COUNT(*) 
		FROM `ORDER` o
		INNER JOIN `ORDER_PRODUCT` op ON o.order_id = op.order_id
		WHERE o.user_id = #{userId} AND o.status IN ('취소', '환불완료');
	</select>
	
	<!-- 취소 주문 정보 조회 -->
	<select id="getCanceledOrders" parameterType="int" resultType="orderdetail">
	    SELECT 
	        o.order_id AS orderId,              <!-- 주문 ID -->
	        o.order_num AS orderNum,            <!-- 주문 번호 -->
	        o.date AS orderDate,                <!-- 주문 날짜 -->
	        o.status AS orderStatus,            <!-- 주문 상태 -->
	        op.product_id AS productId,         <!-- 상품 ID -->
	        op.quantity AS productOrderQuantity,<!-- 상품 주문 수량 -->
	        p.brand_name AS brandName,          <!-- 상품 브랜드 이름 -->
	        p.product_name AS productName,      <!-- 상품 이름 -->
	        p.option AS productOption,          <!-- 상품 옵션 -->
	        (op.quantity * p.price) AS productOrderPrice,  <!-- 상품별 주문 총 가격 -->
	        (SELECT i.img_url FROM PRODUCT_IMG i WHERE i.product_id = op.product_id LIMIT 1) AS imgUrl
	    FROM 
	        `ORDER` o
	    INNER JOIN 
	        `ORDER_PRODUCT` op ON o.order_id = op.order_id 
	    INNER JOIN 
	        `PRODUCT` p ON op.product_id = p.product_id 
	    WHERE 
	        o.user_id = #{userId} AND o.status IN ('취소', '환불완료')
	    ORDER BY 
	        o.order_id DESC
	    LIMIT #{pageSize} OFFSET #{offset};
	</select>

	<!-- 주문 상세 정보 조회 -->
    <select id="getOrderDetail" parameterType="int" resultType="orderdetail">
	    SELECT
			o.order_id AS orderId,
	        o.order_num AS orderNum,
	        o.date AS orderDate,
	        o.total_price AS orderTotalPrice,
	        o.status AS orderStatus,
	        o.receiver AS receiverName,
	        o.receiver_phone AS receiverPhone,
	        o.post_num AS receiverPostnum,
	        o.address AS address 
        FROM `order` o 
        WHERE o.order_id = #{orderId}
	</select>
	
	<!-- 주문 상품 상세 정보 조회 -->
	<select id="getOrderProductDetail" parameterType="int" resultType="orderdetail">
		SELECT 
        o.order_id AS orderId,               <!-- 주문 ID -->
        o.order_num AS orderNum,             <!-- 주문 번호 -->
        o.date AS orderDate,                 <!-- 주문 날짜 -->
        o.status AS orderStatus,             <!-- 주문 상태 -->
        op.product_id AS productId,          <!-- 상품 ID -->
        op.quantity AS productOrderQuantity, <!-- 상품 주문 수량 -->
        p.brand_name AS brandName,           <!-- 상품 브랜드 이름 -->
        p.product_name AS productName,       <!-- 상품 이름 -->
        p.option AS productOption,           <!-- 상품 옵션 -->
        (op.quantity * p.price) AS productOrderPrice, <!-- 상품별 주문 총 가격 -->
        (SELECT i.img_url                    <!-- 상품 이미지 URL 하나 선택 -->
         FROM PRODUCT_IMG i 
         WHERE i.product_id = op.product_id
         LIMIT 1) AS imgUrl                  <!-- 하나의 img_url만 가져옴 -->
    FROM 
        `ORDER` o
    INNER JOIN 
        `ORDER_PRODUCT` op ON o.order_id = op.order_id  <!-- 주문과 주문 상품 조인 -->
    INNER JOIN 
        `PRODUCT` p ON op.product_id = p.product_id      <!-- 주문 상품과 제품 조인 -->
    WHERE 
        o.order_id = ${orderId}                          <!-- 특정 사용자 ID로 필터링 -->
	</select>

	<!-- 결제 할인 정보 조회 -->
	<select id="getOrderPaymentDetail" parameterType="int" resultType="paymentdetail">
		SELECT 
            p.payment_id AS paymentId,
            p.payment_price AS paymentPrice,
            p.payment_method AS paymentMethod,
            p.points AS pointDiscount,
            uc.coupon_id AS couponId,
            mc.value AS couponDiscount
        FROM PAYMENT p
        LEFT JOIN USER_COUPON uc ON p.user_coupon_id = uc.user_coupon_id
        LEFT JOIN MANAGER_COUPON mc ON uc.coupon_id = mc.coupon_id
        WHERE p.order_id = #{orderId}
	</select>

	<!-- 리뷰 작성 -->
	<insert id="insertReview">
        INSERT INTO REVIEW (user_id, product_id, status, content, write_date)
        VALUES (#{userId}, #{productId}, #{status}, #{content}, NOW())
    </insert>

	
	
	<!-- 혜택정보 -->
	<!-- 사용자  포인트 상태별 조회 (메인에서도 사용)-->
	<select id="getTotalPointsByStatus" parameterType="map" resultType="int">
        SELECT SUM(balance) 
        FROM point
        WHERE user_id = #{userId} AND description = #{description}
    </select>
	
	<!-- 쿠폰정보 -->
	<select id="getUserCouponInfo" parameterType="int" resultType="coupon">
		SELECT uc.delete_date, mc.coupon_id, mc.name, mc.description,mc.value
		FROM MANAGER_COUPON mc JOIN USER_COUPON uc ON mc.coupon_id = uc.coupon_id 
		WHERE uc.user_id = #{userId} AND uc.status = 1
	</select>


</mapper>
